package tiger.common.dal.persistence.icbc;

import java.util.ArrayList;
import java.util.List;

public class TransactioninfocountDOExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table transactioninfocount
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table transactioninfocount
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table transactioninfocount
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactioninfocount
     *
     * @mbggenerated
     */
    public TransactioninfocountDOExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactioninfocount
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactioninfocount
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactioninfocount
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactioninfocount
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactioninfocount
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactioninfocount
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactioninfocount
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactioninfocount
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactioninfocount
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transactioninfocount
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table transactioninfocount
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andLastIdIsNull() {
            addCriterion("last_ID is null");
            return (Criteria) this;
        }

        public Criteria andLastIdIsNotNull() {
            addCriterion("last_ID is not null");
            return (Criteria) this;
        }

        public Criteria andLastIdEqualTo(Integer value) {
            addCriterion("last_ID =", value, "lastId");
            return (Criteria) this;
        }

        public Criteria andLastIdNotEqualTo(Integer value) {
            addCriterion("last_ID <>", value, "lastId");
            return (Criteria) this;
        }

        public Criteria andLastIdGreaterThan(Integer value) {
            addCriterion("last_ID >", value, "lastId");
            return (Criteria) this;
        }

        public Criteria andLastIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("last_ID >=", value, "lastId");
            return (Criteria) this;
        }

        public Criteria andLastIdLessThan(Integer value) {
            addCriterion("last_ID <", value, "lastId");
            return (Criteria) this;
        }

        public Criteria andLastIdLessThanOrEqualTo(Integer value) {
            addCriterion("last_ID <=", value, "lastId");
            return (Criteria) this;
        }

        public Criteria andLastIdIn(List<Integer> values) {
            addCriterion("last_ID in", values, "lastId");
            return (Criteria) this;
        }

        public Criteria andLastIdNotIn(List<Integer> values) {
            addCriterion("last_ID not in", values, "lastId");
            return (Criteria) this;
        }

        public Criteria andLastIdBetween(Integer value1, Integer value2) {
            addCriterion("last_ID between", value1, value2, "lastId");
            return (Criteria) this;
        }

        public Criteria andLastIdNotBetween(Integer value1, Integer value2) {
            addCriterion("last_ID not between", value1, value2, "lastId");
            return (Criteria) this;
        }

        public Criteria andTotalIsNull() {
            addCriterion("total is null");
            return (Criteria) this;
        }

        public Criteria andTotalIsNotNull() {
            addCriterion("total is not null");
            return (Criteria) this;
        }

        public Criteria andTotalEqualTo(Integer value) {
            addCriterion("total =", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalNotEqualTo(Integer value) {
            addCriterion("total <>", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalGreaterThan(Integer value) {
            addCriterion("total >", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalGreaterThanOrEqualTo(Integer value) {
            addCriterion("total >=", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalLessThan(Integer value) {
            addCriterion("total <", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalLessThanOrEqualTo(Integer value) {
            addCriterion("total <=", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalIn(List<Integer> values) {
            addCriterion("total in", values, "total");
            return (Criteria) this;
        }

        public Criteria andTotalNotIn(List<Integer> values) {
            addCriterion("total not in", values, "total");
            return (Criteria) this;
        }

        public Criteria andTotalBetween(Integer value1, Integer value2) {
            addCriterion("total between", value1, value2, "total");
            return (Criteria) this;
        }

        public Criteria andTotalNotBetween(Integer value1, Integer value2) {
            addCriterion("total not between", value1, value2, "total");
            return (Criteria) this;
        }

        public Criteria andTxAmtCountIsNull() {
            addCriterion("tx_Amt_count is null");
            return (Criteria) this;
        }

        public Criteria andTxAmtCountIsNotNull() {
            addCriterion("tx_Amt_count is not null");
            return (Criteria) this;
        }

        public Criteria andTxAmtCountEqualTo(Long value) {
            addCriterion("tx_Amt_count =", value, "txAmtCount");
            return (Criteria) this;
        }

        public Criteria andTxAmtCountNotEqualTo(Long value) {
            addCriterion("tx_Amt_count <>", value, "txAmtCount");
            return (Criteria) this;
        }

        public Criteria andTxAmtCountGreaterThan(Long value) {
            addCriterion("tx_Amt_count >", value, "txAmtCount");
            return (Criteria) this;
        }

        public Criteria andTxAmtCountGreaterThanOrEqualTo(Long value) {
            addCriterion("tx_Amt_count >=", value, "txAmtCount");
            return (Criteria) this;
        }

        public Criteria andTxAmtCountLessThan(Long value) {
            addCriterion("tx_Amt_count <", value, "txAmtCount");
            return (Criteria) this;
        }

        public Criteria andTxAmtCountLessThanOrEqualTo(Long value) {
            addCriterion("tx_Amt_count <=", value, "txAmtCount");
            return (Criteria) this;
        }

        public Criteria andTxAmtCountIn(List<Long> values) {
            addCriterion("tx_Amt_count in", values, "txAmtCount");
            return (Criteria) this;
        }

        public Criteria andTxAmtCountNotIn(List<Long> values) {
            addCriterion("tx_Amt_count not in", values, "txAmtCount");
            return (Criteria) this;
        }

        public Criteria andTxAmtCountBetween(Long value1, Long value2) {
            addCriterion("tx_Amt_count between", value1, value2, "txAmtCount");
            return (Criteria) this;
        }

        public Criteria andTxAmtCountNotBetween(Long value1, Long value2) {
            addCriterion("tx_Amt_count not between", value1, value2, "txAmtCount");
            return (Criteria) this;
        }

        public Criteria andEquSignCountIsNull() {
            addCriterion("equ_sign_count is null");
            return (Criteria) this;
        }

        public Criteria andEquSignCountIsNotNull() {
            addCriterion("equ_sign_count is not null");
            return (Criteria) this;
        }

        public Criteria andEquSignCountEqualTo(Integer value) {
            addCriterion("equ_sign_count =", value, "equSignCount");
            return (Criteria) this;
        }

        public Criteria andEquSignCountNotEqualTo(Integer value) {
            addCriterion("equ_sign_count <>", value, "equSignCount");
            return (Criteria) this;
        }

        public Criteria andEquSignCountGreaterThan(Integer value) {
            addCriterion("equ_sign_count >", value, "equSignCount");
            return (Criteria) this;
        }

        public Criteria andEquSignCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("equ_sign_count >=", value, "equSignCount");
            return (Criteria) this;
        }

        public Criteria andEquSignCountLessThan(Integer value) {
            addCriterion("equ_sign_count <", value, "equSignCount");
            return (Criteria) this;
        }

        public Criteria andEquSignCountLessThanOrEqualTo(Integer value) {
            addCriterion("equ_sign_count <=", value, "equSignCount");
            return (Criteria) this;
        }

        public Criteria andEquSignCountIn(List<Integer> values) {
            addCriterion("equ_sign_count in", values, "equSignCount");
            return (Criteria) this;
        }

        public Criteria andEquSignCountNotIn(List<Integer> values) {
            addCriterion("equ_sign_count not in", values, "equSignCount");
            return (Criteria) this;
        }

        public Criteria andEquSignCountBetween(Integer value1, Integer value2) {
            addCriterion("equ_sign_count between", value1, value2, "equSignCount");
            return (Criteria) this;
        }

        public Criteria andEquSignCountNotBetween(Integer value1, Integer value2) {
            addCriterion("equ_sign_count not between", value1, value2, "equSignCount");
            return (Criteria) this;
        }

        public Criteria andActSignCountIsNull() {
            addCriterion("act_sign_count is null");
            return (Criteria) this;
        }

        public Criteria andActSignCountIsNotNull() {
            addCriterion("act_sign_count is not null");
            return (Criteria) this;
        }

        public Criteria andActSignCountEqualTo(Integer value) {
            addCriterion("act_sign_count =", value, "actSignCount");
            return (Criteria) this;
        }

        public Criteria andActSignCountNotEqualTo(Integer value) {
            addCriterion("act_sign_count <>", value, "actSignCount");
            return (Criteria) this;
        }

        public Criteria andActSignCountGreaterThan(Integer value) {
            addCriterion("act_sign_count >", value, "actSignCount");
            return (Criteria) this;
        }

        public Criteria andActSignCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("act_sign_count >=", value, "actSignCount");
            return (Criteria) this;
        }

        public Criteria andActSignCountLessThan(Integer value) {
            addCriterion("act_sign_count <", value, "actSignCount");
            return (Criteria) this;
        }

        public Criteria andActSignCountLessThanOrEqualTo(Integer value) {
            addCriterion("act_sign_count <=", value, "actSignCount");
            return (Criteria) this;
        }

        public Criteria andActSignCountIn(List<Integer> values) {
            addCriterion("act_sign_count in", values, "actSignCount");
            return (Criteria) this;
        }

        public Criteria andActSignCountNotIn(List<Integer> values) {
            addCriterion("act_sign_count not in", values, "actSignCount");
            return (Criteria) this;
        }

        public Criteria andActSignCountBetween(Integer value1, Integer value2) {
            addCriterion("act_sign_count between", value1, value2, "actSignCount");
            return (Criteria) this;
        }

        public Criteria andActSignCountNotBetween(Integer value1, Integer value2) {
            addCriterion("act_sign_count not between", value1, value2, "actSignCount");
            return (Criteria) this;
        }

        public Criteria andTruSignCountIsNull() {
            addCriterion("tru_Sign_count is null");
            return (Criteria) this;
        }

        public Criteria andTruSignCountIsNotNull() {
            addCriterion("tru_Sign_count is not null");
            return (Criteria) this;
        }

        public Criteria andTruSignCountEqualTo(Integer value) {
            addCriterion("tru_Sign_count =", value, "truSignCount");
            return (Criteria) this;
        }

        public Criteria andTruSignCountNotEqualTo(Integer value) {
            addCriterion("tru_Sign_count <>", value, "truSignCount");
            return (Criteria) this;
        }

        public Criteria andTruSignCountGreaterThan(Integer value) {
            addCriterion("tru_Sign_count >", value, "truSignCount");
            return (Criteria) this;
        }

        public Criteria andTruSignCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("tru_Sign_count >=", value, "truSignCount");
            return (Criteria) this;
        }

        public Criteria andTruSignCountLessThan(Integer value) {
            addCriterion("tru_Sign_count <", value, "truSignCount");
            return (Criteria) this;
        }

        public Criteria andTruSignCountLessThanOrEqualTo(Integer value) {
            addCriterion("tru_Sign_count <=", value, "truSignCount");
            return (Criteria) this;
        }

        public Criteria andTruSignCountIn(List<Integer> values) {
            addCriterion("tru_Sign_count in", values, "truSignCount");
            return (Criteria) this;
        }

        public Criteria andTruSignCountNotIn(List<Integer> values) {
            addCriterion("tru_Sign_count not in", values, "truSignCount");
            return (Criteria) this;
        }

        public Criteria andTruSignCountBetween(Integer value1, Integer value2) {
            addCriterion("tru_Sign_count between", value1, value2, "truSignCount");
            return (Criteria) this;
        }

        public Criteria andTruSignCountNotBetween(Integer value1, Integer value2) {
            addCriterion("tru_Sign_count not between", value1, value2, "truSignCount");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table transactioninfocount
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table transactioninfocount
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}